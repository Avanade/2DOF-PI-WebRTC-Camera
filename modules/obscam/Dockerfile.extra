FROM innovationcontainerimages.azurecr.io/obs-cam:streamer-pi.core

RUN export GST_PLUGIN_PATH=/usr/local/lib/gstreamer-1.0:/usr/lib/gstreamer-1.0 \
    && export LD_LIBRARY_PATH=/usr/local/lib/:/usr/lib \
    && cd /usr/local/src \
    && wget https://gstreamer.freedesktop.org/src/gst-libav/gst-libav-1.18.4.tar.xz \
    && tar -xf gst-libav-1.18.4.tar.xz \
    && cd ./gst-libav-1.18.4 \
    && mkdir build \
    && cd ./build \
    && meson --prefix=/usr -D buildtype=release -D gst_debug=false -D gtk_doc=disabled -D target=rpi -D header_path=/opt/vc/include/IL/ -D package-origin=https://gstreamer.freedesktop.org/src/gstreamer/ -D package-name="GStreamer 1.18.4 BLFS" .. \
    && ninja -j4 \
    && ninja install \
    && ldconfig 

RUN export GST_PLUGIN_PATH=/usr/local/lib/gstreamer-1.0:/usr/lib/gstreamer-1.0 \
    && export LD_LIBRARY_PATH=/usr/local/lib/:/usr/lib \
    && cd /usr/local/src \
    && wget https://gstreamer.freedesktop.org/src/gst-rtsp-server/gst-rtsp-server-1.18.4.tar.xz \
    && tar -xf gst-rtsp-server-1.18.4.tar.xz \
    && cd ./gst-rtsp-server-1.18.4 \
    && mkdir build \
    && cd ./build \
    && meson --prefix=/usr -D buildtype=release -D gst_debug=false -D gtk_doc=disabled -D package-origin=https://gstreamer.freedesktop.org/src/gstreamer/ -D package-name="GStreamer 1.18.4 BLFS" .. \
    && ninja -j4 \
    && ninja install \
    && ldconfig

RUN export GST_PLUGIN_PATH=/usr/local/lib/gstreamer-1.0:/usr/lib/gstreamer-1.0 \
    && export LD_LIBRARY_PATH=/usr/local/lib/:/usr/lib \
    && cd /usr/local/src \
    && wget https://gstreamer.freedesktop.org/src/gst-omx/gst-omx-1.18.4.tar.xz \
    && tar -xf gst-omx-1.18.4.tar.xz \
    && cd ./gst-omx-1.18.4 \
    && mkdir build \
    && cd ./build \
    && meson --prefix=/usr -D target=rpi -D header_path=/opt/vc/include/IL/ -Dbuildtype=release -Dgst_debug=false -Dgtk_doc=disabled -Dexamples=disabled -Dx11=disabled -Dglx=disabled -Dopengl=disabled -D package-origin=https://gstreamer.freedesktop.org/src/gstreamer/ -D package-name="GStreamer 1.18.4 BLFS" .. \
    && ninja -j4 \
    && ninja install \
    && ldconfig 

# build takes about 2 minutes
# docker buildx build --platform linux/arm/v7 --rm -f "Dockerfile.extra" -t obs-cam:pi.extra "."
# docker build  --rm -f "Dockerfile.extra" -t obs-cam:pi.extra "."
# docker run -dit --network host --name obs-cam.extra obs-cam:pi.extra /bin/bash


