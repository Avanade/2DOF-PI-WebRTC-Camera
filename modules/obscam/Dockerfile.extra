FROM innovationcontainerimages.azurecr.io/obs-cam:streamer-pi.core

## RUST ...  optional, adds native whip/whep support to gstreamer
RUN cd /usr/local/src \
    && export GST_PLUGIN_PATH=/usr/local/lib/gstreamer-1.0:/usr/lib/gstreamer-1.0 \
    && export LD_LIBRARY_PATH=/usr/local/lib/ \
    && curl https://sh.rustup.rs -sSf | bash -s -- -y --default-toolchain stable-arm-unknown-linux-gnueabihf

ENV PATH="/root/.cargo/bin:${PATH}"

RUN cargo install cargo-c 
        # slow, bloated, with many weak depedencies; careful

RUN cd /usr/local/src \
    && export GST_PLUGIN_PATH=/usr/local/lib/gstreamer-1.0:/usr/lib/gstreamer-1.0 \
    && export LD_LIBRARY_PATH=/usr/local/lib/ \
    && git clone https://gitlab.freedesktop.org/gstreamer/gst-plugins-rs.git \
    && cd gst-plugins-rs \
    && rm Cargo.toml \
        # this one is bloated; we're going to delete some install options to speed things up and to avoid crashing things during the build
    && curl -o Cargo.toml https://raw.githubusercontent.com/steveseguin/raspberry_ninja/main/raspberry_pi/Cargo.toml \
    && cargo cinstall --prefix=./tmp  \
        # whip/whep plugins for gstreamer 
    && cp ./tmp/lib/gstreamer-1.0/* /usr/local/lib/arm-linux-gnueabihf/gstreamer-1.0 \
    && cp ./tmp/lib/pkgconfig/* /usr/local/lib/arm-linux-gnueabihf/pkgconfig \
    #&& cp ./tmp/lib/gstreamer-1.0/* /usr/local/lib/gstreamer-1.0 \
    #&& cp ./tmp/lib/pkgconfig/* /usr/local/lib/pkgconfig \
    && cd /usr/local/src && rm -rf gst-plugins-rs 

# build takes about 60 minutes. The resulting image is about 4.35GB.
# docker buildx build --platform linux/arm/v7 --pull --rm -f "Dockerfile.extra" -t innovationcontainerimages.azurecr.io/obs-cam:streamer-pi.extra "."
# docker build  --pull --rm -f "Dockerfile.extra" -t innovationcontainerimages.azurecr.io/obs-cam:streamer-pi.extra "."
# docker run -dit --network host --name obs-cam.extra innovationcontainerimages.azurecr.io/obs-cam:streamer-pi.extra /bin/bash