FROM innovationcontainerimages.azurecr.io/obs-cam:streamer-pi.deps

## Build gStreamer 1.22
RUN cd /usr/local/src \
    && git clone -b 1.22 --depth 1 https://gitlab.freedesktop.org/gstreamer/gstreamer/ \
        ## operating on version 1.22
    && export GST_PLUGIN_PATH=/usr/local/lib/gstreamer-1.0:/usr/lib/gstreamer-1.0 \
    && export LD_LIBRARY_PATH=/usr/local/lib/ \
    && cd gstreamer \
    && rm -r build || true \
    && mkdir build \
    && cd build \
    && meson --prefix=/usr/local -Dbuildtype=release -Dgst-plugins-base:gl_winsys=egl -Dgpl=enabled -Ddoc=disabled -Dtests=disabled -Dexamples=disabled -Dges=disabled -Dgst-examples=disabled -Ddevtools=disabled .. \
    && cd .. \
    && ninja -C build install -j4 \
    && ldconfig 

## Vanilla LibCamera -- We run it after gstreamer so it detects it and installs the right plugins.
RUN cd /usr/local/src \
    && export GST_PLUGIN_PATH=/usr/local/lib/gstreamer-1.0:/usr/lib/gstreamer-1.0 \
    && export LD_LIBRARY_PATH=/usr/local/lib/ \
    && git clone --depth 1 https://git.libcamera.org/libcamera/libcamera.git \
    && cd libcamera \
    && meson setup build \
    && ninja -C build install -j4 \ 
    && ldconfig

# build takes about 30 minutes.
# docker buildx build --platform linux/arm/v7 --pull --rm -f "Dockerfile.core" -t innovationcontainerimages.azurecr.io/obs-cam:streamer-pi.core "."
# docker build  --pull --rm -f "Dockerfile.core" -t innovationcontainerimages.azurecr.io/obs-cam:streamer-pi.core "."
# docker run -dit --network host --name obs-cam.core innovationcontainerimages.azurecr.io/obs-cam:streamer-pi.core /bin/bash